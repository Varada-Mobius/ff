name: Create Feedforward Model
description: Constructs a Keras feedforward model with hardcoded input/output sizes and saves it.

outputs:
  - {name: model, type: Model}

implementation:
  container:
    image: python:3.8
    command:
      - sh
      - -c
      - |
        python3 -m pip install --quiet tensorflow
        exec python3 -u - "$@"
      - |
        import tensorflow as tf
        import argparse
        import os

        parser = argparse.ArgumentParser()
        parser.add_argument('--model', required=True)
        args = parser.parse_args()

        # Example: MNIST shape (784,) input and 10-class output
        model = tf.keras.Sequential([
            tf.keras.layers.Input(shape=(784,)),
            tf.keras.layers.Dense(256, activation='relu'),
            tf.keras.layers.Dense(128, activation='relu'),
            tf.keras.layers.Dense(10)  # logits, no softmax for FF
        ])

        model.save(args.model)

    args:
      - --model
      - {outputPath: model}
